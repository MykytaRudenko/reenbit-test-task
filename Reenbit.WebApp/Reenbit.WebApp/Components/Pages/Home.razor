@page "/"
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Http.HttpResults
@using Microsoft.AspNetCore.Mvc
@using Reenbit.WebApp.Models
@using Reenbit.WebApp.Services
@rendermode RenderMode.InteractiveServer

<link href="app.css" rel="stylesheet" />

<section class="upload-group">
    <h3>Upload DOCX File</h3>

    <EditForm class="form" FormName="upload-file-form" Model="_model" OnValidSubmit="@HandleUpload">
        <div class="form-group">
            <label class="form-item" for="email">Email:</label>
            <InputText class="form-item form-control-email" id="email" @bind-Value="_model.Email" required />
        </div>
        <div class="form-group">
            <label class="form-item" for="file">Choose DOCX File:</label>
            <InputFile class="form-item form-control-file" id="file" OnChange="@HandleFileSelected" accept=".docx" required />
        </div>
        <button type="submit" class="btn btn-primary">Upload</button>
    </EditForm>
</section>


@if (!string.IsNullOrEmpty(_message))
{
    <div class="message-box">
        <p>@_message</p>
    </div>
}

@code 
{
    private string? _message { get; set; }
    private Model _model = new Model();

    private void HandleFileSelected(InputFileChangeEventArgs args)
    {
        _model.File = args.File;
    }
    
    public async Task HandleUpload(EditContext context)
    {
        var service = new FileService();
        var result = await service.UploadAsync(_model.Email, _model.File);
        if (result != null)
        {
            _message = $"File uploaded successfully! Email: {_model.Email}";
        }
        StateHasChanged();
    }
}